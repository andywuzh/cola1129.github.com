<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: PHP | 来年鱼的世界]]></title>
  <link href="http://blog.andygo.org/categories/php/atom.xml" rel="self"/>
  <link href="http://blog.andygo.org/"/>
  <updated>2013-11-24T21:35:49+08:00</updated>
  <id>http://blog.andygo.org/</id>
  <author>
    <name><![CDATA[andy]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[nginx下php使用flush]]></title>
    <link href="http://blog.andygo.org/2013/11/24/php-ob-flush-with-nginx/"/>
    <updated>2013-11-24T21:08:00+08:00</updated>
    <id>http://blog.andygo.org/2013/11/24/php-ob-flush-with-nginx</id>
    <content type="html"><![CDATA[<p>对于PHP, 希望可以在页面上不间断地输出内容(类似tail -f filename), 而不是等待请求处理完一次性返回, 可以使用ob(<a href="http://www.php.net/manual/en/book.outcontrol.php">output buffer</a>)相关的函数.</p>

<p>这需要禁用服务端的gzip压缩, 以及输出缓冲(nginx+fastcgi模式下), 相应设置如下:</p>

<pre><code>php.ini:
    output_buffering = Off
    zlib.output_compression = Off

php-fpm.conf:
    request_terminate_timeout = 0

nginx.conf:
    gzip off;
    proxy_buffering off;
</code></pre>

<p>PHP也可以在执行脚本中进行运行时设置:</p>

<pre><code>ini_set('zlib.output_compression', 0);
ini_set('implicit_flush', 1);
@ob_end_clean();
set_time_limit(0);
</code></pre>

<p>然后在PHP代码中如下使用:</p>

<pre><code>ob_start('ob_gzhandler');
ob_flush();
ob_implicit_flush(1);

$i = 100;
while ($i--) {
    echo $i;
    sleep(1);
}
</code></pre>
]]></content>
  </entry>
  
</feed>
